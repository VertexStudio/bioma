services:
  ollama:
    image: ollama/ollama:0.5.7
    container_name: bioma-ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEPALIVE=-1
      - OLLAMA_DEBUG=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - bioma-ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - bioma-network

  surrealdb:
    image: surrealdb/surrealdb:v2.1.4
    container_name: bioma-surrealdb
    command: start --no-banner --allow-all --bind 0.0.0.0:9123 --user root --pass root surrealkv://data/bioma.db
    user: "1000:1000"
    volumes:
      - bioma-surreal_data:/data
    ports:
      - "9123:9123"
    networks:
      - bioma-network

  init-volume:
    image: busybox
    container_name: bioma-init-volume
    volumes:
      - bioma-surreal_data:/data
    command: chown -R 1000:1000 /data

  markitdown:
    build:
      context: assets/scripts/markitdown
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    entrypoint: [ "gunicorn", "--bind", "0.0.0.0:5001", "markitdown_script:app" ]

  pdf-analyzer:
    build:
      context: ../pdf-document-layout-analysis
      dockerfile: Dockerfile
    container_name: pdf-document-layout-analysis
    entrypoint:
      [
        "gunicorn",
        "-k",
        "uvicorn.workers.UvicornWorker",
        "--chdir",
        "./src",
        "app:app",
        "--bind",
        "0.0.0.0:5060",
        "--timeout",
        "10000",
      ]
    init: true
    restart: unless-stopped
    ports:
      - "5060:5060"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  surrealist:
    image: surrealdb/surrealist:3.1.9
    container_name: bioma-surrealist
    ports:
      - "8080:8080"
    networks:
      - bioma-network

  minio:
    image: quay.io/minio/minio
    container_name: bioma-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - bioma-network
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      # MINIO_BROWSER: "on"
      # MINIO_BROWSER_REDIRECT: "false"
      # MINIO_BROWSER_REDIRECT_URL: "http://localhost:8082"
      # MINIO_BROWSER_CONTENT_SECURITY_POLICY: "frame-ancestors * 'self' file://* http://* https://*; default-src * 'unsafe-inline' 'unsafe-eval'; connect-src * ws: wss:;"
      # MINIO_BROWSER_X_FRAME_OPTIONS: "ALLOWALL"
      # MINIO_BROWSER_COOKIE_SAMESITE: "None"
      # MINIO_BROWSER_COOKIE_SECURE: "false"
    volumes:
      - bioma-minio-data:/data
    command: server /data
    healthcheck:
      test: mc ready local
      start_period: 1s
      interval: 2s
      timeout: 10s
      retries: 10

  mc:
    image: minio/mc
    container_name: bioma-mc
    depends_on:
      - minio
    networks:
      - bioma-network
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set myminio http://minio:9000 minioadmin minioadmin &&
      mc mb -p myminio/bioma &&
      echo '{
        \"Version\": \"2012-10-17\",
        \"Statement\": [
          {
            \"Effect\": \"Allow\",
            \"Principal\": \"*\",
            \"Action\": \"s3:GetObject\",
            \"Resource\": \"arn:aws:s3:::bioma/*\"
          },
          {
            \"Effect\": \"Allow\",
            \"Principal\": {
              \"AWS\": \"*\"
            },
            \"Action\": [
              \"s3:GetBucketLocation\",
              \"s3:ListBucket\",
              \"s3:ListBucketMultipartUploads\",
              \"s3:AbortMultipartUpload\", 
              \"s3:DeleteObject\",
              \"s3:ListMultipartUploadParts\",
              \"s3:PutObject\"
            ],
            \"Resource\": [
              \"arn:aws:s3:::bioma\",
              \"arn:aws:s3:::bioma/*\"
            ]
          }
        ]
      }' > /tmp/policy.json &&
      mc anonymous set-json /tmp/policy.json myminio/bioma"

  nginx:
    image: nginx:alpine
    container_name: bioma-nginx
    volumes:
      - ./assets/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    network_mode: "host"
    depends_on:
      - minio-console

  minio-console:
    build:
      context: ./assets/minio
      dockerfile: Dockerfile
    container_name: bioma-minio-console
    environment:
      CONSOLE_MINIO_SERVER: "http://localhost:9000"
      CONSOLE_PORT: "9090"
      CONSOLE_SECURE_CONTENT_SECURITY_POLICY: "frame-ancestors * 'self' file://* http://* https://*; default-src * 'unsafe-inline' 'unsafe-eval'; connect-src * ws: wss:;"
      CONSOLE_BROWSER_REDIRECT_URL: "http://localhost:9090"
    working_dir: /app
    entrypoint: ["/app/console"]
    command: ["server"]
    depends_on:
      - minio
    network_mode: "host"

volumes:
  bioma-ollama_data:
  bioma-surreal_data:
  bioma-minio-data:


networks:
  bioma-network:
    driver: bridge
